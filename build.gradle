buildscript {
    repositories {
        jcenter()
        maven { url = "http://files.minecraftforge.net/maven" }

    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
    }
}




apply plugin: 'net.minecraftforge.gradle.forge'

version = "1.0"
group = "tschipp.carryon" 
archivesBaseName = "carryon"

sourceCompatibility = targetCompatibility = '1.8' 
compileJava {
    sourceCompatibility = targetCompatibility = '1.8'
}

minecraft {
    version = "1.12.2-14.23.5.2847"
    runDir = "run"
 
    mappings = "snapshot_20171003"
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.
}

repositories {

    maven { url 'http://maven.epoxide.org' }
	
    maven { url = "https://mrcrayfish.com/maven" }

	maven {
        url "https://maven.mcmoddev.com/"
    }
}



dependencies {
  
   //   deobfCompile "net.darkhax.gamestages:GameStages-1.12.2:2.0.91"
	 
	    compile "com.mrcrayfish:obfuscate:0.2.6-1.12.2"
		compile "net.ilexiconn:llibrary:1.7.9-1.12.2:dev"

    dependencies { compile fileTree(dir:'lib',include:['*.jar'])}
}

processResources {

    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

task signJar(type: SignJar, dependsOn: reobfJar) {

    // Skips if the keyStore property is missing.
    onlyIf {
        project.hasProperty('modkeyStore')
    }

    // findProperty allows us to reference the property without it existing. 
    // Using project.propName would cause the script to fail validation if 
    // the property did not exist. 
    keyStore = project.findProperty('modkeyStore')
    alias = project.findProperty('modkeyStoreAlias')
    storePass = project.findProperty('modkeyStorePass')
    keyPass = project.findProperty('modkeyStoreKeyPass')
    inputFile = jar.archivePath
    outputFile = jar.archivePath
}

// Runs this task automatically when build is ran. 
build.dependsOn signJar

